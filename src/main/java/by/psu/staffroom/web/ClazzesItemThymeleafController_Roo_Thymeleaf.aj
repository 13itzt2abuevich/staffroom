// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package by.psu.staffroom.web;

import by.psu.staffroom.domain.Clazz;
import by.psu.staffroom.service.api.ClazzService;
import by.psu.staffroom.web.ClazzesItemThymeleafController;
import by.psu.staffroom.web.ClazzesItemThymeleafLinkFactory;
import io.springlets.web.NotFoundException;
import io.springlets.web.mvc.util.ControllerMethodLinkBuilderFactory;
import io.springlets.web.mvc.util.MethodLinkBuilderFactory;
import java.util.Locale;
import javax.validation.Valid;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.util.UriComponents;

privileged aspect ClazzesItemThymeleafController_Roo_Thymeleaf {
    
    declare @type: ClazzesItemThymeleafController: @Controller;
    
    declare @type: ClazzesItemThymeleafController: @RequestMapping(value = "/clazzes/{clazz}", name = "ClazzesItemThymeleafController", produces = MediaType.TEXT_HTML_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MessageSource ClazzesItemThymeleafController.messageSource;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MethodLinkBuilderFactory<ClazzesItemThymeleafController> ClazzesItemThymeleafController.itemLink;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param clazzService
     * @param messageSource
     * @param linkBuilder
     */
    @Autowired
    public ClazzesItemThymeleafController.new(ClazzService clazzService, MessageSource messageSource, ControllerMethodLinkBuilderFactory linkBuilder) {
        setClazzService(clazzService);
        setMessageSource(messageSource);
        setItemLink(linkBuilder.of(ClazzesItemThymeleafController.class));
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return MessageSource
     */
    public MessageSource ClazzesItemThymeleafController.getMessageSource() {
        return messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param messageSource
     */
    public void ClazzesItemThymeleafController.setMessageSource(MessageSource messageSource) {
        this.messageSource = messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return MethodLinkBuilderFactory
     */
    public MethodLinkBuilderFactory<ClazzesItemThymeleafController> ClazzesItemThymeleafController.getItemLink() {
        return itemLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param itemLink
     */
    public void ClazzesItemThymeleafController.setItemLink(MethodLinkBuilderFactory<ClazzesItemThymeleafController> itemLink) {
        this.itemLink = itemLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @param locale
     * @param method
     * @return Clazz
     */
    @ModelAttribute
    public Clazz ClazzesItemThymeleafController.getClazz(@PathVariable("clazz") Long id, Locale locale, HttpMethod method) {
        Clazz clazz = null;
        if (HttpMethod.PUT.equals(method)) {
            clazz = clazzService.findOneForUpdate(id);
        } else {
            clazz = clazzService.findOne(id);
        }
        
        if (clazz == null) {
            String message = messageSource.getMessage("error_NotFound", new Object[] {"Clazz", id}, "The record couldn't be found", locale);
            throw new NotFoundException(message);
        }
        return clazz;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param clazz
     * @param model
     * @return ModelAndView
     */
    @GetMapping(name = "show")
    public ModelAndView ClazzesItemThymeleafController.show(@ModelAttribute Clazz clazz, Model model) {
        model.addAttribute("clazz", clazz);
        return new ModelAndView("clazzes/show");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param clazz
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/inline", name = "showInline")
    public ModelAndView ClazzesItemThymeleafController.showInline(@ModelAttribute Clazz clazz, Model model) {
        model.addAttribute("clazz", clazz);
        return new ModelAndView("clazzes/showInline :: inline-content");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param dataBinder
     */
    @InitBinder("clazz")
    public void ClazzesItemThymeleafController.initClazzBinder(WebDataBinder dataBinder) {
        dataBinder.setDisallowedFields("id");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void ClazzesItemThymeleafController.populateFormats(Model model) {
        model.addAttribute("application_locale", LocaleContextHolder.getLocale().getLanguage());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void ClazzesItemThymeleafController.populateForm(Model model) {
        populateFormats(model);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param clazz
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/edit-form", name = "editForm")
    public ModelAndView ClazzesItemThymeleafController.editForm(@ModelAttribute Clazz clazz, Model model) {
        populateForm(model);
        
        model.addAttribute("clazz", clazz);
        return new ModelAndView("clazzes/edit");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param clazz
     * @param version
     * @param concurrencyControl
     * @param result
     * @param model
     * @return ModelAndView
     */
    @PutMapping(name = "update")
    public ModelAndView ClazzesItemThymeleafController.update(@Valid @ModelAttribute Clazz clazz, @RequestParam("version") Integer version, @RequestParam(value = "concurrency", required = false, defaultValue = "") String concurrencyControl, BindingResult result, Model model) {
        // Check if provided form contain errors
        if (result.hasErrors()) {
            populateForm(model);
            
            return new ModelAndView("clazzes/edit");
        }
        // Concurrency control
        Clazz existingClazz = getClazzService().findOne(clazz.getId());
        if(clazz.getVersion() != existingClazz.getVersion() && StringUtils.isEmpty(concurrencyControl)){
            populateForm(model);
            model.addAttribute("clazz", clazz);
            model.addAttribute("concurrency", true);
            return new ModelAndView("clazzes/edit");
        } else if(clazz.getVersion() != existingClazz.getVersion() && "discard".equals(concurrencyControl)){
            populateForm(model);
            model.addAttribute("clazz", existingClazz);
            model.addAttribute("concurrency", false);
            return new ModelAndView("clazzes/edit");
        } else if(clazz.getVersion() != existingClazz.getVersion() && "apply".equals(concurrencyControl)){
            // Update the version field to be able to override the existing values
            clazz.setVersion(existingClazz.getVersion());
        }
        Clazz savedClazz = getClazzService().save(clazz);
        UriComponents showURI = getItemLink().to(ClazzesItemThymeleafLinkFactory.SHOW).with("clazz", savedClazz.getId()).toUri();
        return new ModelAndView("redirect:" + showURI.toUriString());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param clazz
     * @return ResponseEntity
     */
    @ResponseBody
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> ClazzesItemThymeleafController.delete(@ModelAttribute Clazz clazz) {
        getClazzService().delete(clazz);
        return ResponseEntity.ok().build();
    }
    
}
