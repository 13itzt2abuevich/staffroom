// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package by.psu.staffroom.service.impl;

import by.psu.staffroom.domain.Clazz;
import by.psu.staffroom.domain.Instructor;
import by.psu.staffroom.domain.Lesson;
import by.psu.staffroom.domain.Period;
import by.psu.staffroom.domain.Room;
import by.psu.staffroom.domain.Subject;
import by.psu.staffroom.repository.LessonRepository;
import by.psu.staffroom.service.impl.LessonServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect LessonServiceImpl_Roo_Service_Impl {
    
    declare @type: LessonServiceImpl: @Service;
    
    declare @type: LessonServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private LessonRepository LessonServiceImpl.lessonRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param lessonRepository
     */
    @Autowired
    public LessonServiceImpl.new(LessonRepository lessonRepository) {
        setLessonRepository(lessonRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return LessonRepository
     */
    public LessonRepository LessonServiceImpl.getLessonRepository() {
        return lessonRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param lessonRepository
     */
    public void LessonServiceImpl.setLessonRepository(LessonRepository lessonRepository) {
        this.lessonRepository = lessonRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param lesson
     */
    @Transactional
    public void LessonServiceImpl.delete(Lesson lesson) {
        // Clear bidirectional many-to-one child relationship with Period
        if (lesson.getPeriod() != null) {
            lesson.getPeriod().getLessons().remove(lesson);
        }
        
        // Clear bidirectional many-to-one child relationship with Instructor
        if (lesson.getInstructor() != null) {
            lesson.getInstructor().getLessons().remove(lesson);
        }
        
        // Clear bidirectional many-to-one child relationship with Subject
        if (lesson.getSubject() != null) {
            lesson.getSubject().getLessons().remove(lesson);
        }
        
        // Clear bidirectional many-to-one child relationship with Clazz
        if (lesson.getClazz() != null) {
            lesson.getClazz().getLessons().remove(lesson);
        }
        
        // Clear bidirectional many-to-one child relationship with Room
        if (lesson.getRoom() != null) {
            lesson.getRoom().getLessons().remove(lesson);
        }
        
        getLessonRepository().delete(lesson);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Lesson> LessonServiceImpl.save(Iterable<Lesson> entities) {
        return getLessonRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void LessonServiceImpl.delete(Iterable<Long> ids) {
        List<Lesson> toDelete = getLessonRepository().findAll(ids);
        getLessonRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Lesson
     */
    @Transactional
    public Lesson LessonServiceImpl.save(Lesson entity) {
        return getLessonRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Lesson
     */
    public Lesson LessonServiceImpl.findOne(Long id) {
        return getLessonRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Lesson
     */
    public Lesson LessonServiceImpl.findOneForUpdate(Long id) {
        return getLessonRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Lesson> LessonServiceImpl.findAll(Iterable<Long> ids) {
        return getLessonRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Lesson> LessonServiceImpl.findAll() {
        return getLessonRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long LessonServiceImpl.count() {
        return getLessonRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Lesson> LessonServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getLessonRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param clazz
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Lesson> LessonServiceImpl.findByClazz(Clazz clazz, GlobalSearch globalSearch, Pageable pageable) {
        return getLessonRepository().findByClazz(clazz, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param instructor
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Lesson> LessonServiceImpl.findByInstructor(Instructor instructor, GlobalSearch globalSearch, Pageable pageable) {
        return getLessonRepository().findByInstructor(instructor, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param period
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Lesson> LessonServiceImpl.findByPeriod(Period period, GlobalSearch globalSearch, Pageable pageable) {
        return getLessonRepository().findByPeriod(period, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param room
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Lesson> LessonServiceImpl.findByRoom(Room room, GlobalSearch globalSearch, Pageable pageable) {
        return getLessonRepository().findByRoom(room, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param subject
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Lesson> LessonServiceImpl.findBySubject(Subject subject, GlobalSearch globalSearch, Pageable pageable) {
        return getLessonRepository().findBySubject(subject, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param clazz
     * @return Long
     */
    public long LessonServiceImpl.countByClazz(Clazz clazz) {
        return getLessonRepository().countByClazz(clazz);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param instructor
     * @return Long
     */
    public long LessonServiceImpl.countByInstructor(Instructor instructor) {
        return getLessonRepository().countByInstructor(instructor);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param period
     * @return Long
     */
    public long LessonServiceImpl.countByPeriod(Period period) {
        return getLessonRepository().countByPeriod(period);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param room
     * @return Long
     */
    public long LessonServiceImpl.countByRoom(Room room) {
        return getLessonRepository().countByRoom(room);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param subject
     * @return Long
     */
    public long LessonServiceImpl.countBySubject(Subject subject) {
        return getLessonRepository().countBySubject(subject);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Lesson> LessonServiceImpl.getEntityType() {
        return Lesson.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> LessonServiceImpl.getIdType() {
        return Long.class;
    }
    
}
