// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package by.psu.staffroom.service.impl;

import by.psu.staffroom.domain.Clazz;
import by.psu.staffroom.domain.Lesson;
import by.psu.staffroom.repository.ClazzRepository;
import by.psu.staffroom.service.api.LessonService;
import by.psu.staffroom.service.impl.ClazzServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ClazzServiceImpl_Roo_Service_Impl {
    
    declare @type: ClazzServiceImpl: @Service;
    
    declare @type: ClazzServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ClazzRepository ClazzServiceImpl.clazzRepository;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private LessonService ClazzServiceImpl.lessonService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param clazzRepository
     * @param lessonService
     */
    @Autowired
    public ClazzServiceImpl.new(ClazzRepository clazzRepository, @Lazy LessonService lessonService) {
        setClazzRepository(clazzRepository);
        setLessonService(lessonService);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ClazzRepository
     */
    public ClazzRepository ClazzServiceImpl.getClazzRepository() {
        return clazzRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param clazzRepository
     */
    public void ClazzServiceImpl.setClazzRepository(ClazzRepository clazzRepository) {
        this.clazzRepository = clazzRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return LessonService
     */
    public LessonService ClazzServiceImpl.getLessonService() {
        return lessonService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param lessonService
     */
    public void ClazzServiceImpl.setLessonService(LessonService lessonService) {
        this.lessonService = lessonService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param clazz
     * @param lessonsToAdd
     * @return Clazz
     */
    @Transactional
    public Clazz ClazzServiceImpl.addToLessons(Clazz clazz, Iterable<Long> lessonsToAdd) {
        List<Lesson> lessons = getLessonService().findAll(lessonsToAdd);
        clazz.addToLessons(lessons);
        return getClazzRepository().save(clazz);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param clazz
     * @param lessonsToRemove
     * @return Clazz
     */
    @Transactional
    public Clazz ClazzServiceImpl.removeFromLessons(Clazz clazz, Iterable<Long> lessonsToRemove) {
        List<Lesson> lessons = getLessonService().findAll(lessonsToRemove);
        clazz.removeFromLessons(lessons);
        return getClazzRepository().save(clazz);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param clazz
     * @param lessons
     * @return Clazz
     */
    @Transactional
    public Clazz ClazzServiceImpl.setLessons(Clazz clazz, Iterable<Long> lessons) {
        List<Lesson> items = getLessonService().findAll(lessons);
        Set<Lesson> currents = clazz.getLessons();
        Set<Lesson> toRemove = new HashSet<Lesson>();
        for (Iterator<Lesson> iterator = currents.iterator(); iterator.hasNext();) {
            Lesson nextLesson = iterator.next();
            if (items.contains(nextLesson)) {
                items.remove(nextLesson);
            } else {
                toRemove.add(nextLesson);
            }
        }
        clazz.removeFromLessons(toRemove);
        clazz.addToLessons(items);
        // Force the version update of the parent side to know that the parent has changed
        // because it has new books assigned
        clazz.setVersion(clazz.getVersion() + 1);
        return getClazzRepository().save(clazz);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param clazz
     */
    @Transactional
    public void ClazzServiceImpl.delete(Clazz clazz) {
        // Clear bidirectional one-to-many parent relationship with Lesson
        for (Lesson item : clazz.getLessons()) {
            item.setClazz(null);
        }
        
        getClazzRepository().delete(clazz);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Clazz> ClazzServiceImpl.save(Iterable<Clazz> entities) {
        return getClazzRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void ClazzServiceImpl.delete(Iterable<Long> ids) {
        List<Clazz> toDelete = getClazzRepository().findAll(ids);
        getClazzRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Clazz
     */
    @Transactional
    public Clazz ClazzServiceImpl.save(Clazz entity) {
        return getClazzRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Clazz
     */
    public Clazz ClazzServiceImpl.findOne(Long id) {
        return getClazzRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Clazz
     */
    public Clazz ClazzServiceImpl.findOneForUpdate(Long id) {
        return getClazzRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Clazz> ClazzServiceImpl.findAll(Iterable<Long> ids) {
        return getClazzRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Clazz> ClazzServiceImpl.findAll() {
        return getClazzRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long ClazzServiceImpl.count() {
        return getClazzRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Clazz> ClazzServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getClazzRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Clazz> ClazzServiceImpl.getEntityType() {
        return Clazz.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> ClazzServiceImpl.getIdType() {
        return Long.class;
    }
    
}
